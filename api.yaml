apiVersion: apps/v1
kind: Deployment
metadata:
  name: apiserver-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apiserver
  template:
    metadata:
      labels:
        app: apiserver
    spec:
      containers:
      - name: apiserver
        image: haloserver.azurecr.io/halo-apiserver-v1.0.0:M01-2023-03-19-1800-develop-optix-B1209
        # image: mcr.microsoft.com/oss/nginx/nginx:1.15.5-alpine
        args: [ "bash", "-c", "cd /usr/local/ofs/conf && ./optixserver start && /bin/bash" ]
        env:
        - name: INSTANCE_HOST
        - name: INSTANCE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: TIMEZONE
        - name: INSTANCE_TYPE
          value: "apiserver"
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8443
          - containerPort: 8444
        resources:
          requests:
            cpu: 0.3
            memory: 3Gi
          limits:
            cpu: 0.6
            memory: 3Gi
        stdin: true
        tty: true
        volumeMounts:
          - name: shared
            mountPath: "/usr/local/ofs/conf/shared/"
          - name: workspace
            mountPath: "/usr/local/ofs/conf/workspace/"
          - name: logs
            mountPath: "/usr/local/ofs/log/"
      imagePullSecrets:
      - name: haloserver-acr-secret
      volumes:
      - name: shared
        persistentVolumeClaim:
          claimName: shared-pvc
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: workspace
        persistentVolumeClaim:
          claimName: workspace-pvc
